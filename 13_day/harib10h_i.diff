harib10h のみに存在: asmhead.bin
harib10h のみに存在: asmhead.lst
harib10h のみに存在: bootpack.bim
diff -u harib10h/bootpack.h harib10i/bootpack.h
--- harib10h/bootpack.h	2006-10-15 19:53:12.000000000 +0900
+++ harib10i/bootpack.h	2006-10-15 19:56:54.000000000 +0900
@@ -169,7 +169,7 @@
 	int data;
 };
 struct TIMERCTL {
-	unsigned int count, next, using;
+	unsigned int count, next;
 	struct TIMER *t0;
 	struct TIMER timers0[MAX_TIMER];
 };
harib10h のみに存在: bootpack.hrb
harib10h のみに存在: bootpack.lst
harib10h のみに存在: bootpack.map
harib10h のみに存在: bootpack.obj
harib10h のみに存在: dsctbl.lst
harib10h のみに存在: dsctbl.obj
harib10h のみに存在: fifo.lst
harib10h のみに存在: fifo.obj
harib10h のみに存在: graphic.lst
harib10h のみに存在: graphic.obj
harib10h のみに存在: hankaku.bin
harib10h のみに存在: hankaku.obj
harib10h のみに存在: haribote.img
harib10h のみに存在: haribote.sys
harib10h のみに存在: int.lst
harib10h のみに存在: int.obj
harib10h のみに存在: ipl10.bin
harib10h のみに存在: ipl10.lst
harib10h のみに存在: keyboard.lst
harib10h のみに存在: keyboard.obj
harib10h のみに存在: memory.lst
harib10h のみに存在: memory.obj
harib10h のみに存在: mouse.lst
harib10h のみに存在: mouse.obj
harib10h のみに存在: naskfunc.lst
harib10h のみに存在: naskfunc.obj
harib10h のみに存在: sheet.lst
harib10h のみに存在: sheet.obj
diff -u harib10h/timer.c harib10i/timer.c
--- harib10h/timer.c	2005-06-01 02:09:58.000000000 +0900
+++ harib10i/timer.c	2005-06-01 02:24:36.000000000 +0900
@@ -13,15 +13,20 @@
 void init_pit(void)
 {
 	int i;
+	struct TIMER *t;
 	io_out8(PIT_CTRL, 0x34);
 	io_out8(PIT_CNT0, 0x9c);
 	io_out8(PIT_CNT0, 0x2e);
 	timerctl.count = 0;
-	timerctl.next = 0xffffffff; /* 最初は作動中のタイマがないので */
-	timerctl.using = 0;
 	for (i = 0; i < MAX_TIMER; i++) {
 		timerctl.timers0[i].flags = 0; /* 未使用 */
 	}
+	t = timer_alloc(); /* 一つもらってくる */
+	t->timeout = 0xffffffff;
+	t->flags = TIMER_FLAGS_USING;
+	t->next = 0; /* 一番うしろ */
+	timerctl.t0 = t; /* 今は番兵しかいないので先頭でもある */
+	timerctl.next = 0xffffffff; /* 番兵しかいないので番兵の時刻 */
 	return;
 }
 
@@ -58,15 +63,6 @@
 	timer->flags = TIMER_FLAGS_USING;
 	e = io_load_eflags();
 	io_cli();
-	timerctl.using++;
-	if (timerctl.using == 1) {
-		/* 動作中のタイマはこれ一つになる場合 */
-		timerctl.t0 = timer;
-		timer->next = 0; /* 次はない */
-		timerctl.next = timer->timeout;
-		io_store_eflags(e);
-		return;
-	}
 	t = timerctl.t0;
 	if (timer->timeout <= t->timeout) {
 		/* 先頭に入れる場合 */
@@ -80,9 +76,6 @@
 	for (;;) {
 		s = t;
 		t = t->next;
-		if (t == 0) {
-			break; /* 一番うしろになった */
-		}
 		if (timer->timeout <= t->timeout) {
 			/* sとtの間に入れる場合 */
 			s->next = timer; /* sの次はtimer */
@@ -91,16 +84,10 @@
 			return;
 		}
 	}
-	/* 一番うしろに入れる場合 */
-	s->next = timer;
-	timer->next = 0;
-	io_store_eflags(e);
-	return;
 }
 
 void inthandler20(int *esp)
 {
-	int i;
 	struct TIMER *timer;
 	io_out8(PIC0_OCW2, 0x60);	/* IRQ-00受付完了をPICに通知 */
 	timerctl.count++;
@@ -108,7 +95,7 @@
 		return;
 	}
 	timer = timerctl.t0; /* とりあえず先頭の番地をtimerに代入 */
-	for (i = 0; i < timerctl.using; i++) {
+	for (;;) {
 		/* timersのタイマは全て動作中のものなので、flagsを確認しない */
 		if (timer->timeout > timerctl.count) {
 			break;
@@ -118,16 +105,7 @@
 		fifo32_put(timer->fifo, timer->data);
 		timer = timer->next; /* 次のタイマの番地をtimerに代入 */
 	}
-	timerctl.using -= i;
-
-	/* 新しいずらし */
 	timerctl.t0 = timer;
-
-	/* timerctl.nextの設定 */
-	if (timerctl.using > 0) {
-		timerctl.next = timerctl.t0->timeout;
-	} else {
-		timerctl.next = 0xffffffff;
-	}
+	timerctl.next = timer->timeout;
 	return;
 }
harib10h のみに存在: timer.lst
harib10h のみに存在: timer.obj
