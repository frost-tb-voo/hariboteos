diff -u ./26_day/harib23e/bootpack.c ./26_day/harib23f/bootpack.c
--- ./26_day/harib23e/bootpack.c	2005-11-25 22:49:28.000000000 +0900
+++ ./26_day/harib23f/bootpack.c	2005-11-26 00:54:22.000000000 +0900
@@ -21,7 +21,7 @@
 	struct MOUSE_DEC mdec;
 	struct MEMMAN *memman = (struct MEMMAN *) MEMMAN_ADDR;
 	unsigned char *buf_back, buf_mouse[256];
-	struct SHEET *sht_back, *sht_mouse, *sht_cons[2];
+	struct SHEET *sht_back, *sht_mouse;
 	struct TASK *task_a, *task;
 	static char keytable0[0x80] = {
 		0,   0,   '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '^', 0x08, 0,
@@ -77,8 +77,7 @@
 	init_screen8(buf_back, binfo->scrnx, binfo->scrny);
 
 	/* sht_cons */
-	sht_cons[0] = open_console(shtctl, memtotal);
-	sht_cons[1] = 0; /* まだ開いてない */
+	key_win = open_console(shtctl, memtotal);
 
 	/* sht_mouse */
 	sht_mouse = sheet_alloc(shtctl);
@@ -88,12 +87,11 @@
 	my = (binfo->scrny - 28 - 16) / 2;
 
 	sheet_slide(sht_back,  0,  0);
-	sheet_slide(sht_cons[0], 32, 4);
+	sheet_slide(key_win,   32, 4);
 	sheet_slide(sht_mouse, mx, my);
-	sheet_updown(sht_back,     0);
-	sheet_updown(sht_cons[0],  1);
-	sheet_updown(sht_mouse,    2);
-	key_win = sht_cons[0];
+	sheet_updown(sht_back,  0);
+	sheet_updown(key_win,   1);
+	sheet_updown(sht_mouse, 2);
 	keywin_on(key_win);
 
 	/* 最初にキーボード状態との食い違いがないように、設定しておくことにする */
@@ -194,13 +192,12 @@
 						io_sti();
 					}
 				}
-				if (i == 256 + 0x3c && key_shift != 0 && sht_cons[1] == 0) {	/* Shift+F2 */
-					sht_cons[1] = open_console(shtctl, memtotal);
-					sheet_slide(sht_cons[1], 32, 4);
-					sheet_updown(sht_cons[1], shtctl->top);
+				if (i == 256 + 0x3c && key_shift != 0) {	/* Shift+F2 */
 					/* 新しく作ったコンソールを入力選択状態にする（そのほうが親切だよね？） */
 					keywin_off(key_win);
-					key_win = sht_cons[1];
+					key_win = open_console(shtctl, memtotal);
+					sheet_slide(key_win, 32, 4);
+					sheet_updown(key_win, shtctl->top);
 					keywin_on(key_win);
 				}
 				if (i == 256 + 0x57) {	/* F11 */
