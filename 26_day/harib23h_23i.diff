diff -u ./26_day/harib23h/bootpack.c ./26_day/harib23i/bootpack.c
--- ./26_day/harib23h/bootpack.c	2005-11-30 16:14:28.000000000 +0900
+++ ./26_day/harib23i/bootpack.c	2005-11-30 20:06:56.000000000 +0900
@@ -7,7 +7,6 @@
 
 void keywin_off(struct SHEET *key_win);
 void keywin_on(struct SHEET *key_win);
-struct SHEET *open_console(struct SHTCTL *shtctl, unsigned int memtotal);
 void close_console(struct SHEET *sht);
 void close_constask(struct TASK *task);
 
diff -u ./26_day/harib23h/bootpack.h ./26_day/harib23i/bootpack.h
--- ./26_day/harib23h/bootpack.h	2006-04-01 00:51:32.000000000 +0900
+++ ./26_day/harib23i/bootpack.h	2006-04-01 20:12:18.000000000 +0900
@@ -256,6 +256,7 @@
 void cmd_dir(struct CONSOLE *cons);
 void cmd_type(struct CONSOLE *cons, int *fat, char *cmdline);
 void cmd_exit(struct CONSOLE *cons, int *fat);
+void cmd_start(struct CONSOLE *cons, char *cmdline, int memtotal);
 int cmd_app(struct CONSOLE *cons, int *fat, char *cmdline);
 int *hrb_api(int edi, int esi, int ebp, int esp, int ebx, int edx, int ecx, int eax);
 int *inthandler0d(int *esp);
@@ -273,3 +274,5 @@
 void file_loadfile(int clustno, int size, char *buf, int *fat, char *img);
 struct FILEINFO *file_search(char *name, struct FILEINFO *finfo, int max);
 
+/* bootpack.c */
+struct SHEET *open_console(struct SHTCTL *shtctl, unsigned int memtotal);
diff -u ./26_day/harib23h/console.c ./26_day/harib23i/console.c
--- ./26_day/harib23h/console.c	2006-04-01 03:20:36.000000000 +0900
+++ ./26_day/harib23i/console.c	2006-04-01 23:39:16.000000000 +0900
@@ -178,6 +178,8 @@
 		cmd_type(cons, fat, cmdline);
 	} else if (strcmp(cmdline, "exit") == 0) {
 		cmd_exit(cons, fat);
+	} else if (strncmp(cmdline, "start ", 6) == 0) {
+		cmd_start(cons, cmdline, memtotal);
 	} else if (cmdline[0] != 0) {
 		if (cmd_app(cons, fat, cmdline) == 0) {
 			/* コマンドではなく、アプリでもなく、さらに空行でもない */
@@ -271,6 +273,23 @@
 	}
 }
 
+void cmd_start(struct CONSOLE *cons, char *cmdline, int memtotal)
+{
+	struct SHTCTL *shtctl = (struct SHTCTL *) *((int *) 0x0fe4);
+	struct SHEET *sht = open_console(shtctl, memtotal);
+	struct FIFO32 *fifo = &sht->task->fifo;
+	int i;
+	sheet_slide(sht, 32, 4);
+	sheet_updown(sht, shtctl->top);
+	/* コマンドラインに入力された文字列を、一文字ずつ新しいコンソールに入力 */
+	for (i = 6; cmdline[i] != 0; i++) {
+		fifo32_put(fifo, cmdline[i] + 256);
+	}
+	fifo32_put(fifo, 10 + 256);	/* Enter */
+	cons_newline(cons);
+	return;
+}
+
 int cmd_app(struct CONSOLE *cons, int *fat, char *cmdline)
 {
 	struct MEMMAN *memman = (struct MEMMAN *) MEMMAN_ADDR;
